# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

orbs:
  matlab: mathworks/matlab@0

executors:
  ubuntu:
    machine:
      image: 'ubuntu-2204:2022.04.1' # if you change version you may need to update the command installing OCTAVE dependencies
    resource_class: medium

    environment:
      GITHUB_WORKSPACE: /home/circleci/tools/reproanalysis

  docker-octave:
    docker:
      - image: gnuoctave/octave:8.4.0
    resource_class: medium+
    environment:
      GITHUB_WORKSPACE: /root/tools/reproanalysis

commands:
  testubuntuoctave:
    description: "Testing on Ubuntu using OCTAVE"
    parameters:
      parameter_xml: 
        type: string
        default: parameters_circleci.xml
      load_fsl:
        type: integer
        default: 0
      load_freesurfer:
        type: integer
        default: 0
      command:
        type: string
        default: reproaClose()
    steps:
      - run:
          name: Authenticate GitHub (for docker)
          command: |
            mkdir ~/.ssh
            ssh-keyscan github.com >> ~/.ssh/known_hosts

      - run: 
          name: Checkout with submodules
          command: git clone --recurse-submodule "$CIRCLE_REPOSITORY_URL" "$GITHUB_WORKSPACE"

      - run:
          name: Install tools and configure reproa
          command: |          
            export DEBIAN_FRONTEND=noninteractive
            mkdir ~/.reproa
            cd $GITHUB_WORKSPACE/.circleci
            cp << parameters.parameter_xml >> ~/.reproa/reproa_parameters_user.xml
            apt update
            apt install libopencv-dev libavformat-dev libavcodec-dev libswscale-dev -y
            apt install python2 -y
            ln -s /usr/bin/python2 /usr/bin/python
            python trigger_install.py
            cd ~/tools/spm12/src
            make PLATFORM=octave
            make PLATFORM=octave install
          environment:
            LOAD_FSL: << parameters.load_fsl >>
            LOAD_FREESURFER: << parameters.load_freesurfer >>
            PARAMETER_XML: << parameters.parameter_xml >>      

      - run:
          name: Run test
          command: |
            echo "addpath(getenv('GITHUB_WORKSPACE')); reproaSetup(); << parameters.command >>" > ~/test_run.m
            octave ~/test_run.m
          no_output_timeout: 1h

      - run:
          name: Prepare artifacts
          command: |
            mkdir /tmp/output
            cp $GITHUB_WORKSPACE/tests/reproa.log /tmp/output
            cp -R $GITHUB_WORKSPACE/tests/report /tmp/output
            tar -czf /tmp/output.tar.gz /tmp/output
      - store_artifacts:
          destination: report
          path: /tmp/output.tar.gz

  testubuntumatlab:
    description: "Testing on Ubuntu using MATLAB"
    parameters:
      parameter_xml: 
        type: string
        default: parameters_circleci.xml
      load_fsl:
        type: integer
        default: 0
      load_freesurfer:
        type: integer
        default: 0
      command:
        type: string
        default: reproaClose()
    steps:
      - run: 
          name: Checkout with submodules
          command: git clone --recurse-submodule "$CIRCLE_REPOSITORY_URL" "$GITHUB_WORKSPACE"

      - matlab/install:
          release: R2020a # comes with Python 2.7

      - run:
          name: Install tools and configure reproa
          command: |
            export DEBIAN_FRONTEND=noninteractive
            sudo apt remove needrestart
            mkdir ~/.reproa
            cd $GITHUB_WORKSPACE/.circleci
            cp << parameters.parameter_xml >> ~/.reproa/reproa_parameters_user.xml
            python trigger_install.py
          environment:
            LOAD_FSL: << parameters.load_fsl >>
            LOAD_FREESURFER: << parameters.load_freesurfer >>
            PARAMETER_XML: << parameters.parameter_xml >>

      - matlab/run-command:
          command: addpath(getenv('GITHUB_WORKSPACE')); reproaSetup(); << parameters.command >>
          no-output-timeout: 1h

      - run:
          name: Prepare artifacts
          command: |
            mkdir /tmp/output
            cp $GITHUB_WORKSPACE/tests/reproa.log /tmp/output
            cp -R $GITHUB_WORKSPACE/tests/report /tmp/output
            tar -czf /tmp/output.tar.gz /tmp/output
      - store_artifacts:
          destination: report
          path: /tmp/output.tar.gz

jobs:
  usecase_octave_SPMdemo:
    executor: docker-octave    
    steps:
      - testubuntuoctave:
          parameter_xml: parameters_circleci_minimal_ubuntu.xml
          command: testRun('test_MoAEpilot_fmri','SPM_CH30')

  usecase_MATLAB_SPMdemo:
    executor: ubuntu    
    steps:
      - testubuntumatlab:
          parameter_xml: parameters_circleci_minimal_ubuntu.xml
          command: testRun('test_MoAEpilot_fmri','SPM_CH30')

  usecase_octave_anat:
    executor: docker-octave    
    steps:
      - testubuntuoctave:
          parameter_xml: parameters_circleci_minimal_ubuntu.xml
          command: testRun('test_LEMON_MRI_anat','anat','subset',{'sub-032301/ses-01/anat', 'sub-032302/ses-01/anat'})

  usecase_MATLAB_anat:
    executor: ubuntu    
    steps:
      - testubuntumatlab:
          parameter_xml: parameters_circleci_minimal_ubuntu.xml
          command: testRun('test_LEMON_MRI_anat','anat','subset',{'sub-032301/ses-01/anat', 'sub-032302/ses-01/anat'})

workflows:
  test:
    jobs:
      - usecase_octave_SPMdemo
      - usecase_MATLAB_SPMdemo