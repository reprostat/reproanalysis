# Use the latest 2.1 version of CircleCI pipeline process engine.
version: 2.1

orbs:
  matlab: mathworks/matlab@0

executors:
  ubuntu:
    machine:
      image: 'ubuntu-2204:2022.04.1' # if you change version you may need to update the command installing OCTAVE dependencies
    resource_class: medium

    environment:
      GITHUB_WORKSPACE: /home/circleci/tools/reproanalysis

commands:
  testubuntuoctave:
    description: "Testing on Ubuntu using OCTAVE"
    parameters:
      parameter_xml: 
        type: string
        default: parameters_circleci.xml
      load_fsl:
        type: integer
        default: 0
      load_freesurfer:
        type: integer
        default: 0
      command:
        type: string
        default: reproaClose()
    steps:
      - run: 
          name: Checkout with submodules
          command: git clone --recurse-submodule "$CIRCLE_REPOSITORY_URL" "$GITHUB_WORKSPACE"

      - run:
          name: Install tools and configure reproa
          command: |          
            export DEBIAN_FRONTEND=noninteractive
            sudo apt remove needrestart
            mkdir ~/.reproa
            cd $GITHUB_WORKSPACE/.circleci
            cp << parameters.parameter_xml >> ~/.reproa/reproa_parameters_user.xml
            sudo apt update
            sudo apt install libopencv-dev libavformat-dev libavcodec-dev libswscale-dev liboctave-dev
            sudo apt install python2
            sudo ln -s /usr/bin/python2 /usr/bin/python
            python trigger_install.py            
            cd ~/tools/spm12/src
            make PLATFORM=octave
            make PLATFORM=octave install            
          environment:
            LOAD_FSL: << parameters.load_fsl >>
            LOAD_FREESURFER: << parameters.load_freesurfer >>
            PARAMETER_XML: << parameters.parameter_xml >>      

      - run:
          name: Run test
          command: |
            echo "addpath(getenv('GITHUB_WORKSPACE')); reproaSetup(); << parameters.command >>" > ~/test_run.m
            $HOME/tools/octave/bin/octave-cli ~/test_run.m
          no_output_timeout: 1h

      - run:
          name: Prepare artifacts
          command: |
            mkdir /tmp/output
            cp $GITHUB_WORKSPACE/tests/reproa.log /tmp/output
            cp -R $GITHUB_WORKSPACE/tests/report /tmp/output
            tar -czf /tmp/output.tar.gz /tmp/output
      - store_artifacts:
          destination: report
          path: /tmp/output.tar.gz

  testubuntumatlab:
    description: "Testing on Ubuntu using MATLAB"
    parameters:
      parameter_xml: 
        type: string
        default: parameters_circleci.xml
      load_fsl:
        type: integer
        default: 0
      load_freesurfer:
        type: integer
        default: 0
      command:
        type: string
        default: reproaClose()
    steps:
      - run: 
          name: Checkout with submodules
          command: git clone --recurse-submodule "$CIRCLE_REPOSITORY_URL" "$GITHUB_WORKSPACE"

      - matlab/install:
          release: R2020a # comes with Python 2.7

      - run:
          name: Install tools and configure reproa
          command: |
            mkdir ~/.reproa
            cd $GITHUB_WORKSPACE/.circleci
            cp << parameters.parameter_xml >> ~/.reproa/reproa_parameters_user.xml
            python trigger_install.py
          environment:
            LOAD_FSL: << parameters.load_fsl >>
            LOAD_FREESURFER: << parameters.load_freesurfer >>
            PARAMETER_XML: << parameters.parameter_xml >>

      - matlab/run-command:
          command: addpath(getenv('GITHUB_WORKSPACE')); reproaSetup(); << parameters.command >>
          no-output-timeout: 1h
      
      - run:
          name: Prepare artifacts
          command: |
            mkdir /tmp/output
            cp $GITHUB_WORKSPACE/tests/reproa.log /tmp/output
            cp -R $GITHUB_WORKSPACE/tests/report /tmp/output
            tar -czf /tmp/output.tar.gz /tmp/output
      - store_artifacts:
          destination: report
          path: /tmp/output.tar.gz

jobs:
  build_octave:
    executor: ubuntu    
    steps:
      - run: 
          name: Build and install OCTAVE
          command: |           
            mkdir ~/build
            cd ~/build
            export DEBIAN_FRONTEND=noninteractive
            sudo apt remove needrestart
            sudo apt update
            sudo apt install gcc g++ autoconf automake bison dvipng epstool fig2dev flex gfortran gnuplot-x11 gperf gzip icoutils libarpack2-dev libbison-dev libopenblas-dev libcurl4-gnutls-dev libfftw3-dev libfltk1.3-dev libfontconfig1-dev libfreetype6-dev libgl1-mesa-dev libgl2ps-dev libglpk-dev libgraphicsmagick++1-dev libhdf5-dev liblapack-dev libosmesa6-dev libpcre3-dev libqhull-dev libqscintilla2-qt5-dev libqrupdate-dev libreadline-dev librsvg2-bin libsndfile1-dev libsuitesparse-dev libsundials-dev libtool libxft-dev make openjdk-8-jdk perl portaudio19-dev pstoedit qtbase5-dev qttools5-dev qttools5-dev-tools rapidjson-dev rsync tar texinfo texlive-latex-extra zlib1g-dev -y
            wget https://ftp.gnu.org/gnu/octave/octave-8.1.0.tar.gz
            tar -xzf octave-8.1.0.tar.gz
            rm octave-8.1.0.tar.gz
            mv octave-8.1.0 octave
            cd octave
            mkdir .build
            cd .build
            ./../configure --prefix=$HOME/tools/octave
            make -j2
            make check
            cd $HOME/build
            tar -czf octave.tar.gz octave

      - persist_to_workspace:
          root: /home/circleci/build
          paths: octave.tar.gz
      
      - store_artifacts:
          destination: octave
          path: /home/circleci/build/octave.tar.gz
    
  usecase_octave_SPM:
    executor: ubuntu    
    steps:
      - attach_workspace:
          at: /home/circleci/build
      
      - run:
          name: Install OCTAVE
          command: |
            export DEBIAN_FRONTEND=noninteractive
            sudo apt remove needrestart
            sudo apt update
            sudo apt install libqhull-dev libfltk1.3-dev libglpk-dev libsundials-dev portaudio19-dev libsndfile1-dev openjdk-8-jdk libgraphicsmagick++1-dev libgl2ps-dev rapidjson-dev qtbase5-dev qttools5-dev qttools5-dev-tools libqscintilla2-qt5-dev -y
            if [[ ! -d $HOME/tools ]]; then mkdir $HOME/tools; fi
            tar -xzf $HOME/build/octave.tar.gz --directory $HOME/build
            cd $HOME/build/octave/.build
            make install

            ls $HOME/tools
            sudo apt install tree
            tree -d -L 3 $HOME/tools

        # testRun('test_MoAEpilot_fmri','SPM_CH30')
      - testubuntuoctave:
          parameter_xml: parameters_circleci_minimal_ubuntu.xml
          command: test_downloadData

  usecase_MATLAB_SPM:
    executor: ubuntu    
    steps:
      # testRun('test_MoAEpilot_fmri','SPM_CH30')
      - testubuntumatlab:
          parameter_xml: parameters_circleci_minimal_ubuntu.xml
          command: test_downloadData

workflows:
  test:
    jobs:
      - build_octave
      - usecase_octave_SPM:
          requires:
            - build_octave
      - usecase_MATLAB_SPM